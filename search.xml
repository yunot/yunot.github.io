<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/11/02/The%20Lack/"/>
      <url>/2019/11/02/The%20Lack/</url>
      
        <content type="html"><![CDATA[<p>title: The Lack<br>date: 2019-11-2<br>tags: thoughts</p><p>At this point of my life, i become quite aware of what’s my strength as well as what i’m lack of ..</p><p>it’s just a good thing to learn.</p><p>no matter it’s about academic or life, i believe that learning is a good thing, and you don’t necessarily have to force yourself to be a good person as long as you do good things.</p><p>so, i know it’s a priviledge and advantage of me to realize that.</p><p>i think i’ll just carry on.</p><p>like my uncle told me the other day, do the hard work and do not ask for a pay.</p><p>and for sure, i need to calm down.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一次前后端分离</title>
      <link href="/2019/10/30/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%EF%BC%88Vue+SpringBoot%EF%BC%89/"/>
      <url>/2019/10/30/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%EF%BC%88Vue+SpringBoot%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="背景：-前后端项目已经创建成功。现使用反向代理，即-前端的请求通过前端服务器转发给后端，前后端之间通过-RESTful-API-传递-JSON-数据进行交流。-本次实验将编写一个登录模块来体现简单的前后端分离。"><a href="#背景：-前后端项目已经创建成功。现使用反向代理，即-前端的请求通过前端服务器转发给后端，前后端之间通过-RESTful-API-传递-JSON-数据进行交流。-本次实验将编写一个登录模块来体现简单的前后端分离。" class="headerlink" title="背景： 前后端项目已经创建成功。现使用反向代理，即 前端的请求通过前端服务器转发给后端，前后端之间通过 RESTful API 传递 JSON 数据进行交流。 本次实验将编写一个登录模块来体现简单的前后端分离。"></a>背景： 前后端项目已经创建成功。现使用反向代理，即 前端的请求通过前端服务器转发给后端，前后端之间通过 RESTful API 传递 JSON 数据进行交流。 本次实验将编写一个登录模块来体现简单的前后端分离。</h3></blockquote><h2 id="一-前端部分"><a href="#一-前端部分" class="headerlink" title="一. 前端部分"></a>一. 前端部分</h2><h3 id="1-前端页面开发"><a href="#1-前端页面开发" class="headerlink" title="1. 前端页面开发"></a>1. 前端页面开发</h3><h4 id="1-1-Login-Vue"><a href="#1-1-Login-Vue" class="headerlink" title="1.1  Login.Vue"></a>1.1  Login.Vue</h4><p> 打开WebStorm里新建的Vue-Demo项目，在<code>src\components</code>目录下New-&gt;Vue Component,命名为Login。</p><p>Login里的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      用户名:&lt;input type=&quot;text&quot; v-model=&quot;loginForm.username&quot; placeholder=&quot;请输入用户名&quot;/&gt;</span><br><span class="line">      &lt;br&gt;&lt;br&gt;</span><br><span class="line">      密码： &lt;input type=&quot;password&quot; v-model=&quot;loginForm.password&quot; placeholder=&quot;请输入密码&quot;/&gt;</span><br><span class="line">      &lt;br&gt;&lt;br&gt;</span><br><span class="line">      &lt;button v-on:click=&quot;login&quot;&gt;登录&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &apos;Login&apos;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        loginForm: &#123;</span><br><span class="line">          username: &apos;&apos;,</span><br><span class="line">          password: &apos;&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        responseResult: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      login () &#123;</span><br><span class="line">        this.$axios</span><br><span class="line">          .post(&apos;/login&apos;, &#123;</span><br><span class="line">            username: this.loginForm.username,</span><br><span class="line">            password: this.loginForm.password</span><br><span class="line">          &#125;)</span><br><span class="line">          .then(successResponse =&gt; &#123;</span><br><span class="line">            if (successResponse.data.code === 200) &#123;</span><br><span class="line">              this.$router.replace(&#123;path: &apos;/index&apos;&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(failResponse =&gt; &#123;</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>template标签中是一个简单的登录界面，script标签中的methods里定义了login的点击方法（v-on:click=”login”），向后端/login接口发送数据，如果获得了成功的响应，则能跳至/index页面。</p><h4 id="1-2-MainIndex-Vue"><a href="#1-2-MainIndex-Vue" class="headerlink" title="1.2 MainIndex.Vue"></a>1.2 MainIndex.Vue</h4><p>在<code>src\components</code>目录下New-&gt;Directory,命名为home，在home目录下New-&gt;Vue Component,命名为MainIndex。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      恭喜你完成了你的第一个前后端分离项目！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &apos;AppIndex&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-前端相关配置"><a href="#2-前端相关配置" class="headerlink" title="2. 前端相关配置"></a>2. 前端相关配置</h3><h4 id="2-1-设置反向代理"><a href="#2-1-设置反向代理" class="headerlink" title="2.1 设置反向代理"></a>2.1 设置反向代理</h4><p> 修改 <code>src\main.js</code> 代码如下： </p><p> 因为使用了新的模块 <code>axios</code>，所以需要进入到项目文件夹中，需执行 <code>npm install --save axios</code>，以安装这个模块。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import App from &apos;./App&apos;</span><br><span class="line">import router from &apos;./router&apos;</span><br><span class="line">// 设置反向代理，前端请求默认发送到 http://localhost:8443/api</span><br><span class="line">var axios = require(&apos;axios&apos;)</span><br><span class="line">axios.defaults.baseURL = &apos;http://localhost:8443/api&apos;</span><br><span class="line">// 全局注册，之后可在其他组件中通过 this.$axios 发送数据</span><br><span class="line">Vue.prototype.$axios = axios</span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">/* eslint-disable no-new */</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: &apos;&lt;App/&gt;&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-2-配置页面路由"><a href="#2-2-配置页面路由" class="headerlink" title="2.2 配置页面路由"></a>2.2 配置页面路由</h4><p> 修改 <code>src\router\index.js</code> 代码如下 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Router from &apos;vue-router&apos;</span><br><span class="line">// 导入刚才编写的组件</span><br><span class="line">import AppIndex from &apos;@/components/home/AppIndex&apos;</span><br><span class="line">import Login from &apos;@/components/Login&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">  // 下面都是固定的写法</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/login&apos;,</span><br><span class="line">      name: &apos;Login&apos;,</span><br><span class="line">      component: Login</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/index&apos;,</span><br><span class="line">      name: &apos;MainIndex&apos;,</span><br><span class="line">      component: MainIndex</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-3-跨域支持"><a href="#2-3-跨域支持" class="headerlink" title="2.3 跨域支持"></a>2.3 跨域支持</h4><p>为了让后端能够访问到前端的资源，需要配置跨域支持。</p><p>在 <code>config\index.js</code> 中，找到 proxyTable 位置，修改为以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">  &apos;/api&apos;: &#123;</span><br><span class="line">    target: &apos;http://localhost:8443&apos;,//自行设置的端口</span><br><span class="line">    changeOrigin: true,</span><br><span class="line">    pathRewrite: &#123;</span><br><span class="line">      &apos;^/api&apos;: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-运行项目"><a href="#3-运行项目" class="headerlink" title="3. 运行项目"></a>3. 运行项目</h3><p> 执行 <code>npm run dev</code>，或双击 dev（start 也一样）脚本，查看登录页面效果。 </p><h2 id="二-后端部分"><a href="#二-后端部分" class="headerlink" title="二. 后端部分"></a>二. 后端部分</h2><h3 id="1-Pojo-User-类"><a href="#1-Pojo-User-类" class="headerlink" title="1.  Pojo(User 类)"></a>1.  Pojo(User 类)</h3><p> 在 <code>Login.vue</code> 中，前端发送数据的代码段为 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.post(&apos;/login&apos;, &#123;</span><br><span class="line">            username: this.loginForm.username,</span><br><span class="line">            password: this.loginForm.password</span><br><span class="line">          &#125;)</span><br></pre></td></tr></table></figure><p>所以，在后端创建一个形式一致的类来接收这个JS对象。</p><p>在<code>src\main\java\com\example\springdemo1</code>目录下New-&gt;Directory，<code>pojo</code>.然后New-&gt;Java Class，<code>User</code>类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springdemo1.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    String username;</span><br><span class="line">    String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Result-类"><a href="#2-Result-类" class="headerlink" title="2. Result 类"></a>2. Result 类</h3><p>依旧在<code>src\main\java\com\example\springdemo1</code>目录下New-&gt;Directory，<code>result</code>.</p><p>New-&gt;Java Class，<code>Result</code>类。Result类用来构造响应码。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springdemo1.result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> </span>&#123;</span><br><span class="line">    <span class="comment">//响应码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Result</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-LoginController"><a href="#3-LoginController" class="headerlink" title="3. LoginController"></a>3. LoginController</h3><p>在<code>src\main\java\com\example\springdemo1</code>目录下New-&gt;Directory，<code>controller</code>.</p><p>New-&gt;JavaClass，<code>LoginController</code>.</p><p>其逻辑为，Controller 是对响应进行处理的部分。这里我们设定账号是 admin，密码是 123456，分别与接收到的 User 类的 username 和 password 进行比较。</p><p>根据结果返回不同的 Result，即不同的响应码。前端如果接收到成功的响应码（200），则跳转到 /index 页面。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springdemo1.result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springdemo1.result.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.util.HtmlUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springdemo1.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@CrossOrigin</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"api/login"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">login</span><span class="params">(@RequestBody User requestUser)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 对 html 标签进行转义，防止 XSS 攻击</span></span><br><span class="line">        String username = requestUser.getUsername();</span><br><span class="line">        String password = requestUser.getPassword();</span><br><span class="line">        username = HtmlUtils.htmlEscape(username);</span><br><span class="line">        <span class="keyword">if</span> (!Objects.equals(<span class="string">"admin"</span>, username) || !Objects.equals(<span class="string">"123456"</span>, password) &#123;</span><br><span class="line">            String message = <span class="string">"账号密码错误"</span>;</span><br><span class="line">            System.out.println(<span class="string">"test"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="number">400</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="number">200</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-配置端口"><a href="#4-配置端口" class="headerlink" title="4. 配置端口"></a>4. 配置端口</h3><p> 最后，在 <code>src\main\resources</code> 文件夹下找到 <code>application.properties</code> 文件配置端口，即加上 <code>server.port=8443</code> </p><h2 id="三-运行项目"><a href="#三-运行项目" class="headerlink" title="三. 运行项目"></a>三. 运行项目</h2><p> 同时运行前端和后端项目，访问 <code>localhost:8080/#/login</code>，输入用户名 <code>admin</code>，密码 <code>123456</code> </p><p> 点击确定，成功进入 <code>localhost:8080/#/index</code> </p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue,SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>What&#39;s going on??</title>
      <link href="/2019/10/08/thoughts/"/>
      <url>/2019/10/08/thoughts/</url>
      
        <content type="html"><![CDATA[<p>clearly i have no idea what’s going on here…<br>i took my shot at the holidays and tried to enjoy the warmth and comfort that family brought me.<br>after all that has gone,i just again step into the dilemma.<br>the main reason why i am puzzled and struggling and hesitating is that i need a guidance line to make me feel that i am on the way doing something.<br>i even doubt myself whether it’s worthy or not choosing to stay with my grandparents for the last few days.ok just for a moment.<br>The teacher’s right,i am too passive at this point of my life. i kind of let those things choose me which is not a bright choice for me.<br>but how can i be more active and positive? remains “?”.<br>what’s going on????<br>i don’t even know a thing.</p>]]></content>
      
      
      
        <tags>
            
            <tag> thoughts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/04/hello-world/"/>
      <url>/2019/10/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
